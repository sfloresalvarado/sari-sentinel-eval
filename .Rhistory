d.plot %>%
ggplot(aes(x = semana_anno_sint)) +
geom_line(aes(y = tasa, color = vigilancia)) +
labs(title = "Incidencia de COVID-19, marzo 2020 - marzo 2023",
subtitle = "por región",
x = "Fecha",
y = "Incidencia estimada por 100.000 habitantes",
color = "Vigilancia",
caption = "Vigilancia IRAG corregida por porcentaje de hospitalizaciones") +
facet_wrap(region_est ~ ., ncol = 4, scales = "free_y") +
theme_minimal(base_size = 8) +
theme(plot.caption = element_text(hjust = 0),
legend.position = "bottom")
regs_irag <- levels(droplevels(pob_irag$region_est))
d.mod <- dat_clean %>%
filter(region_est %in% regs_irag,
!(edad_cat %in% c("[80,100)", "[100,120]"))) %>%
pivot_wider(names_from = vigilancia,
values_from = conteo) %>%
left_join(pob_reg) %>%
left_join(pob_irag %>%
mutate(poblacion_irag = poblacion) %>%
group_by(anno_sintomas, region_est, edad_cat, sexo) %>%
summarise(poblacion_irag = sum(poblacion_irag))) %>%
drop_na(sexo) %>%
group_by(anno_sintomas, semana_sintomas, semana_anno_sint,
region_est, edad_cat) %>%
summarise(universal = sum(universal, na.rm = T),
irag = sum(irag, na.rm = T),
poblacion = sum(poblacion, na.rm = T),
poblacion_irag = sum(poblacion_irag, na.rm = T),
Alpha = mean(Alpha, na.rm = T),
B.1.1.348 = mean(B.1.1.348, na.rm = T),
B.1.1 = mean(B.1.1, na.rm = T),
Delta = mean(Delta, na.rm = T),
Gamma = mean(Gamma, na.rm = T),
Lambda = mean(Lambda, na.rm = T),
Mu = mean(Mu, na.rm = T),
N.4 = mean(N.4, na.rm = T),
Omicron = mean(Omicron, na.rm = T),
Otras = mean(Otras, na.rm = T)) %>%
ungroup() %>%
left_join(dat_hosp %>%
group_by(anno_sintomas, semana_anno_sint, region_est, edad_cat) %>%
summarise(conteo_hosp = sum(conteo_hosp),
conteo_notif = sum(conteo_notif)) %>%
mutate(prop_hosp = (conteo_hosp/conteo_notif)*100,
.keep = "unused")) %>%
left_join(dat_pos %>%
mutate(positividad = (pcr_positivo/pcr_conteo)*100,
.keep = "unused")) %>%
left_join(dat_vac %>%
left_join(pob_nac %>%
group_by(anno_sintomas, edad_cat) %>%
summarise(poblacion = sum(poblacion))) %>%
mutate(prop_vac_2da = (vacunas_2da/poblacion)*100,
prop_vac_ref = (vacunas_ref/poblacion)*100,
.keep = "unused")) %>%
mutate(tasa_irag = (irag/poblacion_irag) * 1e5,
#tasa_irag = ((irag/poblacion_irag) * (1/prop_hosp)) * 1e5,
region_est = relevel(region_est, "Metropolitana"),
edad_cat = ordered(edad_cat),
universal_mean = rollapply(universal, 4, mean, align = "center", fill = NA, partial = T),
universal_mean = floor(universal_mean),
prop_vac_2da = replace_na(prop_vac_2da, 0),
prop_vac_ref = replace_na(prop_vac_ref, 0) ) %>%
#dplyr::select(-irag, -poblacion_irag) %>%
mutate_at(c("Alpha", "B.1.1.348", "B.1.1", "Delta", "Gamma",
"Lambda", "Mu", "N.4", "Omicron", "Otras"), replace_na, 0) %>%
drop_na() %>%
droplevels()
load("modelos datos OE1 contagios.RData")
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2)
m1 <- glmmTMB(universal ~
semana_anno_sint +
tasa_irag + #sí
#edad_cat + #prescindible, no mejora mucho la estimación y ya está en el comp aleatorio
#region_est + #prescindible, no mejora mucho la estimación y ya está en el comp aleatorio
prop_hosp + #sí
#prop_vac + #no significativo, posiblemente es info que ya está en prop_hosp
offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2)
View(d.mod)
install.packages("visdat")
library(visdat)
vis_miss(d.mod)
vis_miss(d.mod$universal)
#regs_irag <- levels(droplevels(pob_irag$region_est))
d.mod <- dat_clean %>%
filter(region_est %in% regs_irag,
!(edad_cat %in% c("[80,100)", "[100,120]"))) %>%
pivot_wider(names_from = vigilancia,
values_from = conteo) %>%
left_join(pob_reg) %>%
left_join(pob_irag %>%
mutate(poblacion_irag = poblacion) %>%
group_by(anno_sintomas, region_est, edad_cat, sexo) %>%
summarise(poblacion_irag = sum(poblacion_irag))) %>%
drop_na(sexo) %>%
group_by(anno_sintomas, semana_sintomas, semana_anno_sint,
region_est, edad_cat) %>%
summarise(universal = sum(universal, na.rm = T),
irag = sum(irag, na.rm = T),
poblacion = sum(poblacion, na.rm = T),
poblacion_irag = sum(poblacion_irag, na.rm = T),
Alpha = mean(Alpha, na.rm = T),
B.1.1.348 = mean(B.1.1.348, na.rm = T),
B.1.1 = mean(B.1.1, na.rm = T),
Delta = mean(Delta, na.rm = T),
Gamma = mean(Gamma, na.rm = T),
Lambda = mean(Lambda, na.rm = T),
Mu = mean(Mu, na.rm = T),
N.4 = mean(N.4, na.rm = T),
Omicron = mean(Omicron, na.rm = T),
Otras = mean(Otras, na.rm = T)) %>%
ungroup() %>%
left_join(dat_hosp %>%
group_by(anno_sintomas, semana_anno_sint, region_est, edad_cat) %>%
summarise(conteo_hosp = sum(conteo_hosp),
conteo_notif = sum(conteo_notif)) %>%
mutate(prop_hosp = (conteo_hosp/conteo_notif)*100,
.keep = "unused")) %>%
left_join(dat_pos %>%
mutate(positividad = (pcr_positivo/pcr_conteo)*100,
.keep = "unused")) %>%
left_join(dat_vac %>%
left_join(pob_nac %>%
group_by(anno_sintomas, edad_cat) %>%
summarise(poblacion = sum(poblacion))) %>%
mutate(prop_vac_2da = (vacunas_2da/poblacion)*100,
prop_vac_ref = (vacunas_ref/poblacion)*100,
.keep = "unused")) %>%
mutate(tasa_irag = (irag/poblacion_irag) * 1e5,
#tasa_irag = ((irag/poblacion_irag) * (1/prop_hosp)) * 1e5,
region_est = relevel(region_est, "Metropolitana"),
edad_cat = ordered(edad_cat),
universal_mean = rollapply(universal, 4, mean, align = "center", fill = NA, partial = T),
universal_mean = floor(universal_mean),
prop_vac_2da = replace_na(prop_vac_2da, 0),
prop_vac_ref = replace_na(prop_vac_ref, 0) ) %>%
#dplyr::select(-irag, -poblacion_irag) %>%
mutate_at(c("Alpha", "B.1.1.348", "B.1.1", "Delta", "Gamma",
"Lambda", "Mu", "N.4", "Omicron", "Otras"), replace_na, 0) %>%
drop_na() %>%
droplevels()
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2)
rm(regs_irag)
#regs_irag <- levels(droplevels(pob_irag$region_est))
d.mod <- dat_clean %>%
filter(region_est %in% regs_irag,
!(edad_cat %in% c("[80,100)", "[100,120]"))) %>%
pivot_wider(names_from = vigilancia,
values_from = conteo) %>%
left_join(pob_reg) %>%
left_join(pob_irag %>%
mutate(poblacion_irag = poblacion) %>%
group_by(anno_sintomas, region_est, edad_cat, sexo) %>%
summarise(poblacion_irag = sum(poblacion_irag))) %>%
drop_na(sexo) %>%
group_by(anno_sintomas, semana_sintomas, semana_anno_sint,
region_est, edad_cat) %>%
summarise(universal = sum(universal, na.rm = T),
irag = sum(irag, na.rm = T),
poblacion = sum(poblacion, na.rm = T),
poblacion_irag = sum(poblacion_irag, na.rm = T),
Alpha = mean(Alpha, na.rm = T),
B.1.1.348 = mean(B.1.1.348, na.rm = T),
B.1.1 = mean(B.1.1, na.rm = T),
Delta = mean(Delta, na.rm = T),
Gamma = mean(Gamma, na.rm = T),
Lambda = mean(Lambda, na.rm = T),
Mu = mean(Mu, na.rm = T),
N.4 = mean(N.4, na.rm = T),
Omicron = mean(Omicron, na.rm = T),
Otras = mean(Otras, na.rm = T)) %>%
ungroup() %>%
left_join(dat_hosp %>%
group_by(anno_sintomas, semana_anno_sint, region_est, edad_cat) %>%
summarise(conteo_hosp = sum(conteo_hosp),
conteo_notif = sum(conteo_notif)) %>%
mutate(prop_hosp = (conteo_hosp/conteo_notif)*100,
.keep = "unused")) %>%
left_join(dat_pos %>%
mutate(positividad = (pcr_positivo/pcr_conteo)*100,
.keep = "unused")) %>%
left_join(dat_vac %>%
left_join(pob_nac %>%
group_by(anno_sintomas, edad_cat) %>%
summarise(poblacion = sum(poblacion))) %>%
mutate(prop_vac_2da = (vacunas_2da/poblacion)*100,
prop_vac_ref = (vacunas_ref/poblacion)*100,
.keep = "unused")) %>%
mutate(tasa_irag = (irag/poblacion_irag) * 1e5,
#tasa_irag = ((irag/poblacion_irag) * (1/prop_hosp)) * 1e5,
region_est = relevel(region_est, "Metropolitana"),
edad_cat = ordered(edad_cat),
universal_mean = rollapply(universal, 4, mean, align = "center", fill = NA, partial = T),
universal_mean = floor(universal_mean),
prop_vac_2da = replace_na(prop_vac_2da, 0),
prop_vac_ref = replace_na(prop_vac_ref, 0) ) %>%
#dplyr::select(-irag, -poblacion_irag) %>%
mutate_at(c("Alpha", "B.1.1.348", "B.1.1", "Delta", "Gamma",
"Lambda", "Mu", "N.4", "Omicron", "Otras"), replace_na, 0) %>%
drop_na() %>%
droplevels()
d.mod <- dat_clean %>%
filter(#region_est %in% regs_irag,
!(edad_cat %in% c("[80,100)", "[100,120]"))) %>%
pivot_wider(names_from = vigilancia,
values_from = conteo) %>%
left_join(pob_reg) %>%
left_join(pob_irag %>%
mutate(poblacion_irag = poblacion) %>%
group_by(anno_sintomas, region_est, edad_cat, sexo) %>%
summarise(poblacion_irag = sum(poblacion_irag))) %>%
drop_na(sexo) %>%
group_by(anno_sintomas, semana_sintomas, semana_anno_sint,
region_est, edad_cat) %>%
summarise(universal = sum(universal, na.rm = T),
irag = sum(irag, na.rm = T),
poblacion = sum(poblacion, na.rm = T),
poblacion_irag = sum(poblacion_irag, na.rm = T),
Alpha = mean(Alpha, na.rm = T),
B.1.1.348 = mean(B.1.1.348, na.rm = T),
B.1.1 = mean(B.1.1, na.rm = T),
Delta = mean(Delta, na.rm = T),
Gamma = mean(Gamma, na.rm = T),
Lambda = mean(Lambda, na.rm = T),
Mu = mean(Mu, na.rm = T),
N.4 = mean(N.4, na.rm = T),
Omicron = mean(Omicron, na.rm = T),
Otras = mean(Otras, na.rm = T)) %>%
ungroup() %>%
left_join(dat_hosp %>%
group_by(anno_sintomas, semana_anno_sint, region_est, edad_cat) %>%
summarise(conteo_hosp = sum(conteo_hosp),
conteo_notif = sum(conteo_notif)) %>%
mutate(prop_hosp = (conteo_hosp/conteo_notif)*100,
.keep = "unused")) %>%
left_join(dat_pos %>%
mutate(positividad = (pcr_positivo/pcr_conteo)*100,
.keep = "unused")) %>%
left_join(dat_vac %>%
left_join(pob_nac %>%
group_by(anno_sintomas, edad_cat) %>%
summarise(poblacion = sum(poblacion))) %>%
mutate(prop_vac_2da = (vacunas_2da/poblacion)*100,
prop_vac_ref = (vacunas_ref/poblacion)*100,
.keep = "unused")) %>%
mutate(tasa_irag = (irag/poblacion_irag) * 1e5,
#tasa_irag = ((irag/poblacion_irag) * (1/prop_hosp)) * 1e5,
region_est = relevel(region_est, "Metropolitana"),
edad_cat = ordered(edad_cat),
universal_mean = rollapply(universal, 4, mean, align = "center", fill = NA, partial = T),
universal_mean = floor(universal_mean),
prop_vac_2da = replace_na(prop_vac_2da, 0),
prop_vac_ref = replace_na(prop_vac_ref, 0) ) %>%
#dplyr::select(-irag, -poblacion_irag) %>%
mutate_at(c("Alpha", "B.1.1.348", "B.1.1", "Delta", "Gamma",
"Lambda", "Mu", "N.4", "Omicron", "Otras"), replace_na, 0) %>%
drop_na() %>%
droplevels()
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2)
d.mod <- dat_clean %>%
filter(#region_est %in% regs_irag,
!(edad_cat %in% c("[80,100)", "[100,120]"))) %>%
pivot_wider(names_from = vigilancia,
values_from = conteo) %>%
left_join(pob_reg) %>%
left_join(pob_irag %>%
mutate(poblacion_irag = poblacion) %>%
group_by(anno_sintomas, region_est, edad_cat, sexo) %>%
summarise(poblacion_irag = sum(poblacion_irag))) %>%
drop_na(sexo) %>%
group_by(anno_sintomas, semana_sintomas, semana_anno_sint,
region_est, edad_cat) %>%
summarise(universal = sum(universal, na.rm = T),
irag = sum(irag, na.rm = T),
poblacion = sum(poblacion, na.rm = T),
poblacion_irag = sum(poblacion_irag, na.rm = T),
Alpha = mean(Alpha, na.rm = T),
B.1.1.348 = mean(B.1.1.348, na.rm = T),
B.1.1 = mean(B.1.1, na.rm = T),
Delta = mean(Delta, na.rm = T),
Gamma = mean(Gamma, na.rm = T),
Lambda = mean(Lambda, na.rm = T),
Mu = mean(Mu, na.rm = T),
N.4 = mean(N.4, na.rm = T),
Omicron = mean(Omicron, na.rm = T),
Otras = mean(Otras, na.rm = T)) %>%
ungroup() %>%
left_join(dat_hosp %>%
group_by(anno_sintomas, semana_anno_sint, region_est, edad_cat) %>%
summarise(conteo_hosp = sum(conteo_hosp),
conteo_notif = sum(conteo_notif)) %>%
mutate(prop_hosp = (conteo_hosp/conteo_notif)*100,
.keep = "unused")) %>%
left_join(dat_pos %>%
mutate(positividad = (pcr_positivo/pcr_conteo)*100,
.keep = "unused")) %>%
left_join(dat_vac %>%
left_join(pob_nac %>%
group_by(anno_sintomas, edad_cat) %>%
summarise(poblacion = sum(poblacion))) %>%
mutate(prop_vac_2da = (vacunas_2da/poblacion)*100,
prop_vac_ref = (vacunas_ref/poblacion)*100,
.keep = "unused")) %>%
mutate(tasa_irag = (irag/poblacion_irag) * 1e5,
#tasa_irag = ((irag/poblacion_irag) * (1/prop_hosp)) * 1e5,
region_est = relevel(region_est, "Metropolitana"),
edad_cat = ordered(edad_cat),
universal_mean = rollapply(universal, 4, mean, align = "center", fill = NA, partial = T),
universal_mean = floor(universal_mean),
prop_vac_2da = replace_na(prop_vac_2da, 0),
prop_vac_ref = replace_na(prop_vac_ref, 0) ) %>%
#dplyr::select(-irag, -poblacion_irag) %>%
mutate_at(c("Alpha", "B.1.1.348", "B.1.1", "Delta", "Gamma",
"Lambda", "Mu", "N.4", "Omicron", "Otras"), replace_na, 0) %>%
drop_na()
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2)
m0 <- glmmTMB(universal ~ offset(log(poblacion)),
data = d.mod,
family = nbinom2)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est),
data = d.mod,
family = nbinom2)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|edad_cat),
data = d.mod,
family = nbinom2)
d.mod %>% group_by(region_est, edad_cat) %>% summarise(n())
d.mod %>% group_by(region_est, edad_cat) %>% summarise(n()) %>% View()
d.mod %>% group_by(region_est, edad_cat) %>% summarise(sum(universal)) %>% View()
d.mod %>% group_by(region_est, edad_cat) %>% summarise(sum(poblacion)) %>% View()
d.mod %>% group_by(region_est, edad_cat) %>% summarise(unique(poblacion)) %>% View()
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est),
data = d.mod,
family = nbinom2)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|edad_cat),
data = d.mod,
family = nbinom2)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) ,
data = d.mod,
family = nbinom2)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) ,
data = d.mod,
family = nbinom2, doFit = F)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(b = 1))
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(b = rep(0, 32)))
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(b = rep(1, 32)))
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(b = rep(1, 32)),
doFit = F)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32)),
doFit = F)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32)),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32),
betad = 1),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32),
betad = 1,
theta = 1),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32),
betad = 1,
theta = 1,
psi = 1),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32),
betad = 1,
theta = 1,
psi = 0),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32),
betad = 1,
theta = 1,
psi = NULL),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 1,
b = rep(1, 32),
betad = 1,
theta = 1),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 100,
b = rep(1, 32),
betad = 100,
theta = 100),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 100,
b = rep(1, 32),
betad = 100,
theta = 100),
map = list(theta = factor(NA)),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) ,
data = d.mod,
family = nbinom2, doFit = F)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 100,
b = rep(1, 32),
betad = 100,
theta = 100),
map = list(theta = factor(NA)),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(beta = 100,
b = rep(1, 32),
betad = 100,
theta = 100),
map = list(theta = factor(NA)),
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
doFit = T)
m0 <- glmmTMB(universal ~ offset(log(poblacion)) +
(1|region_est:edad_cat),
data = d.mod,
family = nbinom2,
start = list(psi = c(-1, 1)),
doFit = T)
install.packages("C:/Users/Usuario/OneDrive - Universidad de Chile/Estudios/2020-2024 PhD Salud Pública/- TESIS/Análisis/Paper OE1/Otras dependencias/Matrix_1.5-4.1.tar.gz", repos = NULL, type = "source")
library(Matrix, lib.loc = "C:/Program Files/R/R-4.3.2/library")
detach("package:Matrix", unload = TRUE)
remove.packages("Matrix", lib="C:/Program Files/R/R-4.3.2/library")
